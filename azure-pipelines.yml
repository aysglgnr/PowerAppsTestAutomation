# PowerShell Function App to Windows on Azure
trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '4056269a-8168-4e49-a8d6-29f2beca5f2f'

  # Function app name
  functionAppName: 'your-function-app-name'

  # Agent VM image name
  vmImageName: 'windows-2019'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: PowerShell@2
      displayName: 'Set screen resolution'
      inputs:
        targetType: 'inline'
        script: |
          # Set agent screen resolution to 1920x1080 to avoid sizing issues with Portal  
          Set-DisplayResolution -Width 1920 -Height 1080 -Force
          # Wait 10 seconds  
          Start-Sleep -s 10
          # Verify Screen Resolution is set to 1920x1080  
          Get-DisplayResolution

    - powershell: |
        if (Test-Path "extensions.csproj") {
            dotnet build extensions.csproj --output ./$(workingDirectory)/bin
        }
      displayName: 'Build extensions'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: $(workingDirectory)
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: '$(functionAppName)-env'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure functions app deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: functionApp
              appName: $(functionAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
